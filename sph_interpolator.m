function [ph,th,ra] = sph_interpolator(i_phi,i_thet,i_rad,r_lati,r_long,ananus,mode)
    
    narginchk(5,7);
    if (nargin == 6)
        if (ischar(ananus)~=0)
            mode=ananus;
            ananus=0;
        else
            mode='spherical';
        end
    elseif nargin < 6
        mode='spherical';
        ananus=0;
            
    end

    
    if (ischar(ananus)~=0|| ananus>=1)
        error( 'Invalid value');
    end

    c=length(i_phi);
    
    %% cara original
    i_thet(:)=i_thet(:)./cos(i_thet(:)*ananus);
    
    if strcmp(mode,'strict')
    else

    [~,maxn] = max(i_thet);
    [~,maxs] = min(i_thet);
    i_phi(c*2+r_long*2)=0;
    i_thet(c*2+r_long*2)=0;
    i_rad(c*2+r_long*2)=0;


    for i=1:c
        
        %%  cara a las costados
        if i_phi(i)>=0
            signo=1;
        else
            signo=-1;
        end
        i_phi(i+c)=i_phi(i)-signo*2*pi;
        i_thet(i+c)=i_thet(i);
        i_rad(i+c)=i_rad(i);
        
        %% cara arriba y abajo
    end
    
    i_phi(c*2+r_long*2)=0;
    i_thet(c*2+r_long*2)=0;
    i_rad(c*2+r_long*2)=0;
    
    i_rad(c*2+1:c*2+r_long)=i_rad(maxn);
    i_phi(c*2+1:c*2+r_long)=linspace(-pi,pi,r_long);
    i_thet(c*2+1:c*2+r_long)=pi/2/cos(pi/2*ananus);
    
    i_rad(c*2+r_long+1:c*2+2*r_long)=i_rad(maxs);
    i_phi(c*2+r_long+1:c*2+2*r_long)=linspace(-pi,pi,r_long);
    i_thet(c*2+r_long+1:c*2+2*r_long)=-pi/2/cos(pi/2*ananus);
    end
    
    if strcmp(mode,'tetra')

        L=1;
        H=L/2*tan(pi/3);
        C=L/2*tan(pi/6);

        v_a=[0      ,       pi/2];
        v_b=[1/3*pi ,       -pi/2+2*asin(sqrt(3)/3)];
        v_c=[pi     ,       -pi/2+2*asin(sqrt(3)/3)];
        v_d=[-1/3*pi,       -pi/2+2*asin(sqrt(3)/3)];

    %     c_1=[0      ,   	pi/2-2*asin(sqrt(3)/3)];
    %     c_2=[2/3*pi ,       pi/2-2*asin(sqrt(3)/3)];
        c_3=[0      ,       -pi/2];
    %     c_4=[-2/3*pi,       pi/2-2*asin(sqrt(3)/3)];

        a_bc=[2/3*pi,       -asin(sqrt(3)/3)];
        a_cd=[-2/3*pi,       -asin(sqrt(3)/3)];
        a_bd=[0     ,       -asin(sqrt(3)/3)];
    %     a_ab=[1/3*pi,       +asin(sqrt(3)/3)];
    %     a_ad=[-1/3*pi,       +asin(sqrt(3)/3)];
    %     a_ac=[pi	       +asin(sqrt(3)/3)];


          rl=round(8*r_lati/8);
          s_c_a=[linspace(0,L,rl*2);...
              linspace(H,H,rl*2);...
              linspace(v_c(1)-2*pi,v_a(1)-pi,rl*2);...
              linspace(v_c(2),v_a(2),rl*2)
              ];  
          s_a_c=[linspace(L,2*L,rl*2);...
              linspace(H,H,rl*2);...
              linspace(v_a(1)+pi,v_c(1),rl*2);...
              linspace(v_a(2),v_c(2),rl*2)
              ]; 

          s_d_a=[linspace(L/2,L,rl*2);...
              linspace(0,H,rl*2);...
              linspace(v_d(1),v_d(1),rl*2);...
              linspace(v_d(2),v_a(2),rl*2)
              ];  
          s_a_b=[linspace(L,3*L/2,rl*2);...
              linspace(H,0,rl*2);...
              linspace(v_b(1),v_b(1),rl*2);...
              linspace(v_a(2),v_b(2),rl*2)
              ];

          s_bd_3=[linspace(0,0,rl);...
              linspace(0,C,rl);...
              linspace(a_bd(1),c_3(1),rl);...
              linspace(a_bd(2),c_3(2),rl)
              ];   
          s_3_bd=[linspace(2*L,2*L,rl);...
              linspace(C,0,rl);...
              linspace(c_3(1),a_bd(1),rl);...
              linspace(c_3(2),a_bd(2),rl)
              ]; 

          s_c_3=[linspace(0,0,rl);...
              linspace(H,C,rl);...
              linspace(v_c(1)-2*pi,c_3(1)-pi,rl);...
              linspace(v_c(2),c_3(2),rl)
              ];   
          s_3_c=[linspace(2*L,2*L,rl);...
              linspace(C,H,rl);...
              linspace(c_3(1)+pi,v_c(1),rl);...
              linspace(c_3(2),v_c(2),rl)
              ];  

          s_bd_d=[linspace(0,L/2,rl);...
              linspace(0,0,rl);...
              linspace(a_bd(1),v_d(1),rl);...
              linspace(a_bd(2),v_d(2),rl)
              ];  
          s_d_bd=[linspace(L/2,L,rl);...
              linspace(0,0,rl);...
              linspace(v_d(1),a_bd(1),rl);...
              linspace(v_d(2),a_bd(2),rl)
              ];  

          s_bd_b=[linspace(L,3*L/2,rl);...
              linspace(0,0,rl);...
              linspace(a_bd(1),v_b(1),rl);...
              linspace(a_bd(2),v_b(2),rl)
              ]; 
          s_b_bd=[linspace(3*L/2,2*L,rl);...
              linspace(0,0,rl);...
              linspace(v_b(1),a_bd(1),rl);...
              linspace(v_b(2),a_bd(2),rl)
              ];

          s_c_cd=[linspace(0,L/4,rl);...
              linspace(H,H/2,rl);...
              linspace(v_c(1)-2*pi,a_cd(1),rl);...
              linspace(v_c(2),a_cd(2),rl)
              ];
          s_cd_d=[linspace(L/4,L/2,rl);...
              linspace(H/2,0,rl);...
              linspace(a_cd(1),v_d(1),rl);...
              linspace(a_cd(2),v_d(2),rl)
              ];       

          s_c_cb=[linspace(2*L,7*L/4,rl);...
              linspace(H,H/2,rl);...
              linspace(v_c(1),a_bc(1),rl);...
              linspace(v_c(2),a_bc(2),rl)
              ];
          s_cb_b=[linspace(7*L/4,3*L/2,rl);...
              linspace(H/2,0,rl);...
              linspace(a_bc(1),v_b(1),rl);...
              linspace(a_bc(2),v_b(2),rl)
              ]; 

          s_a_cd=[linspace(L,L/4,rl);...
              linspace(H,H/2,rl);...
              linspace(a_cd(1),a_cd(1),rl);...
              linspace(v_a(2),a_cd(2),rl)
              ];      
          s_a_bd=[linspace(L,L,rl);...
              linspace(H,0,rl);...
              linspace(a_bd(1),a_bd(1),rl);...
              linspace(v_a(2),a_bd(2),rl)
              ];
          s_a_bc=[linspace(L,7*L/4,rl);...
              linspace(H,H/2,rl);...
              linspace(a_bc(1),a_bc(1),rl);...
              linspace(v_a(2),a_bc(2),rl)
              ];

          s_3_cd=[linspace(0,L/4,rl);...
              linspace(C,H/2,rl);...
              linspace(a_cd(1),a_cd(1),rl);...
              linspace(c_3(2),a_cd(2),rl)
              ];
          s_3_bc=[linspace(2*L,7*L/4,rl);...
              linspace(C,H/2,rl);...
              linspace(a_bc(1),a_bc(1),rl);...
              linspace(c_3(2),a_bc(2),rl)
              ];

          s_3_d=[linspace(0,L/2,rl);...
              linspace(C,0,rl);...
              linspace(v_d(1),v_d(1),rl);...
              linspace(c_3(2),v_d(2),rl)
              ];
          s_3_b=[linspace(2*L,3*L/2,rl);...
              linspace(C,0,rl);...
              linspace(v_b(1),v_b(1),rl);...
              linspace(c_3(2),v_b(2),rl)
              ];


        p_tetr=[      s_c_a';...
          s_a_c';...
          s_d_a';...
          s_a_b';...
          s_bd_3';...
          s_3_bd';...
          s_c_3';...
          s_3_c';...
          s_bd_d';...
          s_d_bd';...
          s_bd_b';...
          s_b_bd';...
          s_c_cd';...
          s_cd_d';...
          s_c_cb';...
          s_cb_b';...
          s_a_cd';...
          s_a_bd';...
          s_a_bc';...
          s_3_cd';...
          s_3_bc';...
          s_3_d';...
          s_3_b'];

        x_vec=linspace(0,2*L,r_long);
        y_vec=linspace(0,H,r_lati);
        [xx,yy] = meshgrid(x_vec,y_vec);
        ph=griddata(p_tetr(:,1),p_tetr(:,2),p_tetr(:,3),xx,yy ,'natural');
        th=griddata(p_tetr(:,1),p_tetr(:,2),p_tetr(:,4),xx,yy ,'natural');
        clear L H C rl...
            v_a v_b v_c v_d ...
            c_1 c_2 c_3 c_4 ...
            a_bc a_cd a_bd a_ab a_ad a_ac ...
            s_c_a s_a_c s_d_a s_a_b s_bd_3 s_3_bd s_c_3 s_3_c s_bd_d s_d_bd...
            s_bd_b s_b_bd s_c_cd s_cd_d s_c_cb s_cb_b s_a_cd s_a_bd s_a_bc...
            s_3_cd s_3_bc s_3_d s_3_b...
            p_tetr x_vec y_vec xx yy
    elseif strcmp(mode,'spherical')||strcmp(mode,'strict')
        thetavec = linspace(-pi/2,pi/2,r_lati);
        phivec = linspace(-pi,pi,r_long);
        [ph,th] = meshgrid(phivec,thetavec);
    else
        error( 'Invalid mode');
    end
    ra=griddata(i_phi,i_thet,i_rad,ph,th./cos(th*ananus) ,'natural');

end
